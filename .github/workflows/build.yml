name: Build and Release EXE

on:
  workflow_dispatch:

  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    outputs:
      version: ${{ steps.get_version.outputs.VERSION }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: pip install poetry

      - name: Get version
        id: get_version
        run: echo "::set-output name=VERSION::$(poetry version -s)"

      - name: Install Dependencies (PyInstaller + PyArmor)
        run: |
          poetry install
          poetry run pip install pyinstaller pyarmor

      - name: Obfuscate Code with PyArmor
        run: |
          mkdir obf
          poetry run pyarmor obfuscate --exact main.py -O obf

      - name: Build EXE with PyInstaller (Disable UPX, Keep Console)
        run: |
          poetry run pyinstaller --onefile --noupx obf/main.py

      - name: Rename EXE
        run: mv dist/main.exe dist/main-${{ steps.get_version.outputs.VERSION }}.exe

      - name: Upload EXE
        uses: actions/upload-artifact@v4
        with:
          name: built-exe
          path: dist/main-${{ steps.get_version.outputs.VERSION }}.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download EXE artifact
        uses: actions/download-artifact@v4
        with:
          name: built-exe
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.build.outputs.version }}
          name: Release v${{ needs.build.outputs.version }}
          files: dist/main-${{ needs.build.outputs.version }}.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
